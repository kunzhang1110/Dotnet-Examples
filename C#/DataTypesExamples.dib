#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":["c#","cs"],"languageName":"C#","name":"csharp"},{"aliases":["f#","fs"],"languageName":"F#","name":"fsharp"},{"aliases":[],"languageName":"HTML","name":"html"},{"aliases":[],"languageName":"http","name":"httpRequest"},{"aliases":["js"],"languageName":"JavaScript","name":"javascript"},{"aliases":[],"languageName":"KQL","name":"kql"},{"aliases":[],"languageName":"Mermaid","name":"mermaid"},{"aliases":["powershell"],"languageName":"PowerShell","name":"pwsh"},{"aliases":[],"languageName":"SQL","name":"sql"},{"aliases":[],"name":"value"}]}}

#!markdown

# Data Types

#!markdown

## Enums

#!csharp

public enum ShippingMethod
{
    RegularAirMail= 1,
    RegisteredAirMail = 2,
    Express =3
}
var m = ShippingMethod.Express;
Console.WriteLine((int)m); //3
var mId = 3;
Console.WriteLine((ShippingMethod)mId); //Express
Console.WriteLine(m.ToString()); //Express
// Convert String to Enum
var mName = "Express";
var shippingMethod = (ShippingMethod) Enum.Parse(typeof(ShippingMethod), mName);
Console.WriteLine(shippingMethod); //Express

#!markdown

## Struct

#!csharp

//Declaration
struct Employee
{
    public int EmpId;
    public string Name;

    static Employee() //static parameterless
    {
        Console.Write("First object created");
    }
    public Employee(int empid, string name)
    {
        EmpId = empid;
        Name = name;
    }
}

//Create with new key word
Employee emp1 = new Employee();
Console.WriteLine(emp1.EmpId); // prints 0  

//Create without new key word
Employee emp2;
emp2.EmpId = 1;
Console.WriteLine(emp2.EmpId); // prints 1

#!markdown

## Nullable Value Types

#!csharp

DateTime? date = null; //DateTime is a struct/value
Console.WriteLine(date ?? DateTime.Today);
//equivalent to
Console.WriteLine((date != null) ? date.Value : DateTime.Today);

#!markdown

### Null operators 

#!csharp

DateTime? date = null; //DateTime is a struct/value
Console.WriteLine((date?.Month)==null);
date = date??DateTime.Today;
Console.WriteLine(date?.Month);
